<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>legal markdown on underWater desert Blogging</title><link>https://caseykuhlman.com/tags/legal-markdown/</link><description>Recent content in legal markdown on underWater desert Blogging</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Casey Kuhlman</copyright><lastBuildDate>Thu, 19 Dec 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://caseykuhlman.com/tags/legal-markdown/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Based Negotiations - A Concept Piece</title><link>https://caseykuhlman.com/posts/2013-12-19-git-based-negotiations/</link><pubDate>Thu, 19 Dec 2013 00:00:00 +0000</pubDate><guid>https://caseykuhlman.com/posts/2013-12-19-git-based-negotiations/</guid><description>Yesterday, I was having a conversation with a fellow github lawyer about git-based contract negotiations (gitgotiations&amp;hellip;?). Indeed, this has been on my mind for a while and was one of my motivating, longer term reasons for thinking that some kind of text-based legal document format was necessary.
For the production of many documents, lawyers need not worry too much about what goes into repos as it is only the final version of the document which is shared publicly.</description></item><item><title>Recent Updates to Legal Markdown Gem</title><link>https://caseykuhlman.com/posts/2013-07-14-updates-to-legal-markdown/</link><pubDate>Sun, 14 Jul 2013 00:00:00 +0000</pubDate><guid>https://caseykuhlman.com/posts/2013-07-14-updates-to-legal-markdown/</guid><description>Had some time this weekend and have dug pretty deep into my legal_markdown gem. Mostly the changes should be transparent to users. Now that I feel that am getting a better handle on Ruby, I wanted to refactor the code quite a bit. There were a couple of motivations for this. First, I wanted to put the code more inline with common rubyisms and software construction methods. Second, I wanted to make the gem more flexible.</description></item><item><title>Sublime Legal Markdown Package Updated</title><link>https://caseykuhlman.com/posts/2013-04-19-sublime-legal-markdown-package-pandoc-update/</link><pubDate>Fri, 19 Apr 2013 00:00:00 +0000</pubDate><guid>https://caseykuhlman.com/posts/2013-04-19-sublime-legal-markdown-package-pandoc-update/</guid><description>Finally had a chance to update my legal markdown package for Sublime. The package is built to fill a couple of holes in the system that I use.
As background, I use Sublime as my main IDE both for coding and for my legal work. I use a word processor, but only to review client documents and to do a final review on documents that I build. All the documents that build, I do so in Sublime.</description></item><item><title>My (Current) Transactional Documents Work Flow</title><link>https://caseykuhlman.com/posts/2013-03-09-transactional-documents-workflow/</link><pubDate>Sat, 09 Mar 2013 00:00:00 +0000</pubDate><guid>https://caseykuhlman.com/posts/2013-03-09-transactional-documents-workflow/</guid><description>While it varies, I generally will have two meetings with a client before I will build the initial draft of the contract.
In the first meeting, I will try to ferret out what the client is trying to achieve. This is generally an overview meeting. Mostly, Somalis do not like doing too much in any one meeting &amp;ndash; especially if they do not know you well. So I try to keep the goals of what I need to achieve in these meetings realistic and limited.</description></item><item><title>Pandoc for Legal Documents</title><link>https://caseykuhlman.com/posts/2013-01-24-pandoc-legal-documents/</link><pubDate>Thu, 24 Jan 2013 00:00:00 +0000</pubDate><guid>https://caseykuhlman.com/posts/2013-01-24-pandoc-legal-documents/</guid><description>Lately, I have been writing a lot in markdown. It is a freeing way to write documents because you focus more on the words than the tools around you in the wordprocessing interface. You pick your favorite environment to write &amp;ndash; for me it is Sublime Text &amp;ndash; and then you write. But, clients and courts do not read Github Flavored Markdown.
This is where Pandoc comes into play. Pandoc is one of the many markdown renderers / translators available.</description></item></channel></rss>